"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[241],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),y=a,h=d["".concat(l,".").concat(y)]||d[y]||u[y]||o;return n?r.createElement(h,i(i({ref:t},p),{},{components:n})):r.createElement(h,i({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=y;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},9104:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:1},i="History",s={unversionedId:"plugins/history",id:"plugins/history",title:"History",description:"signalstory provides a convenient way for consumers to access and navigate the state history of a store. By enabling the StoreHistoryPlugin, you can use undo and redo functionality and gain insights into the sequence of actions that have occurred within your application.",source:"@site/docs/plugins/history.md",sourceDirName:"plugins",slug:"/plugins/history",permalink:"/signalstory/docs/plugins/history",draft:!1,editUrl:"https://github.com/zuriscript/signalstory/tree/master/docs/docs/plugins/history.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Plugins",permalink:"/signalstory/docs/category/plugins"},next:{title:"Persistence",permalink:"/signalstory/docs/plugins/persistence"}},l={},c=[{value:"Enabling State History",id:"enabling-state-history",level:2},{value:"Accessing State History",id:"accessing-state-history",level:2},{value:"Undo and Redo Actions",id:"undo-and-redo-actions",level:2}],p={toc:c},d="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"history"},"History"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"signalstory")," provides a convenient way for consumers to access and navigate the state history of a store. By enabling the ",(0,a.kt)("inlineCode",{parentName:"p"},"StoreHistoryPlugin"),", you can use undo and redo functionality and gain insights into the sequence of actions that have occurred within your application."),(0,a.kt)("h2",{id:"enabling-state-history"},"Enabling State History"),(0,a.kt)("p",null,"To activate the state history feature in signalstory, you need to include the plugin using the exposed ",(0,a.kt)("inlineCode",{parentName:"p"},"useStoreHistory")," factory method:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"class StoreWithHistory extends Store<MyState> {\n  constructor() {\n    super({\n        initialState: { ... },\n        name: 'My Store with history',\n        plugins: [\n          useStoreHistory()\n        ],\n    });\n  }\n}\n")),(0,a.kt)("p",null,"By enabling state history, signalstory will automatically store the history of state changes within the store by tracking ",(0,a.kt)("inlineCode",{parentName:"p"},"set"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"update")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"mutate")," calls."),(0,a.kt)("h2",{id:"accessing-state-history"},"Accessing State History"),(0,a.kt)("p",null,"Once the state history is enabled, you can access the history of a store using the ",(0,a.kt)("inlineCode",{parentName:"p"},"getHistory")," method provided by signalstory."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"getHistory(store);\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"getHistory")," method returns an array of ",(0,a.kt)("inlineCode",{parentName:"p"},"HistoryItem<TState>"),", where each item represents a specific state change in the store's history. Each ",(0,a.kt)("inlineCode",{parentName:"p"},"HistoryItem")," contains information about the command or action that caused the state change and the state before the change."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"interface HistoryItem<TState> {\n  command: string; // The name of the command associated with the history item.\n  before: TState; // The state before the command was applied.\n}\n")),(0,a.kt)("h2",{id:"undo-and-redo-actions"},"Undo and Redo Actions"),(0,a.kt)("p",null,"signalstory simplifies the process of undoing and redoing state changes by providing dedicated methods: ",(0,a.kt)("inlineCode",{parentName:"p"},"undo")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"redo"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"undo(store); // Undo the last state change\nredo(store); // Redo the last undone state change, if available\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"undo")," method reverts the store's state to the previous state in the history, effectively reversing the last action. On the other hand, the ",(0,a.kt)("inlineCode",{parentName:"p"},"redo")," method reapplies a previously undone state change, if there is one available."))}u.isMDXComponent=!0}}]);